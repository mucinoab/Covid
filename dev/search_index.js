var documenterSearchIndex = {"docs":
[{"location":"#Reporstat.jl","page":"Home","title":"Reporstat.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Paquete que tiene como objetivo agilizar la consulta de información poblacional de instituciones como INEGI, CONAPO y CONEVAL segregada por municipios para que, en conjunto con datos abiertos de cualquier índole, se facilite la realización de análisis y reportes estadísticos al usuario.","category":"page"},{"location":"#Indice","page":"Home","title":"Indice","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\"index.md\"]","category":"page"},{"location":"#Funciones","page":"Home","title":"Funciones","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Order   = [:function]","category":"page"},{"location":"#Población","page":"Home","title":"Población","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Funciones que manejan datos proporcionados por INEGI, CONAPO y CONEVAL y proporcionan consultas por municipio. Detalles de año de actualización, consideraciones, y ejemplos proporcionados en cada apartado por función.","category":"page"},{"location":"","page":"Home","title":"Home","text":"idh\nidh_todos_municipios\n\nint_migratoria\nint_migratoria_todos\n\nedad_entidades\nedad_municipios\nedad_municipios_todos\n\ntasas_vitales\n\ngeografia\ngeografia_todos_municipios\n\ncodigos_postales\ncodigos_postales_todos\n\npoblacion_mexico\npoblacion_entidad\npoblacion_municipio\npoblacion_todas_entidades\npoblacion_todos_municipios\n\nsimilitud_region\nsimilitud_entidad\nsimilitud_municipio","category":"page"},{"location":"#Reporstat.idh","page":"Home","title":"Reporstat.idh","text":"idh(cve_entidad::String, cve_municipio::String=\"\")::DataFrame\n\nRegresa el índice de desarrollo humano, los años promedio de escolaridad, los años esperados de escolaridad y los ingresos per cápita de una entidad o de un municipio en formato DataFrame, se debe especificar la clave para ambos parámetros, si solo se manda el parámetro cveentidad_ se regresará el IDH de la entidad. Los datos son obtenidos de la página oficial de las Naciones Unidas, se pueden consultar aquí.\n\nEjemplo\n\njulia> idh(clave(\"Campeche\"),\"003\").idh*100\n1-element Array{Float64,1}:\n 77.50874\n\njulia> idh(clave(\"Campeche\"),\"003\").idh[1]*100\n77.50874\n\njulia> idh(clave(\"Campeche\"),\"003\")\n1×8 DataFrame\n Row │ ent  mun  entidad   municipio  idh       anio_promedio_escolaridad  anios_esperados_escolaridad  ingreso_per_capita \n     │ Any  Any  Any       Any        Any       Any                        Any                          Any                \n─────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 04   003  Campeche  Carmen     0.775087  9.19528                    12.6746                      18552.8\n\njulia> idh(clave(\"Campeche\"))\n1×3 DataFrame\n Row │ ent  ent_nombre  idh  \n     │ Any  Any         Any  \n─────┼───────────────────────\n   1 │ 04   Campeche    0.82\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.idh_todos_municipios","page":"Home","title":"Reporstat.idh_todos_municipios","text":"idh_todos_municipios()::DataFrame\n\nRegresa un DataFrame con todos los valores agregados del índice de desarrollo humano de todos los municipios. Los datos son obtenidos de la página oficial de las Naciones Unidas, se pueden consultar aquí.\n\nEjemplo\n\njulia> idh_todos_municipios()\n2456×8 DataFrame\n  Row │ ent     mun     entidad              municipio                     idh       anio_promedio_escolaridad  anios_esperados_escolaridad  ingreso_per_capita \n      │ String  String  String               String                        Float64   Float64                    Float64                      Float64            \n──────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n    1 │ 01      001     Aguascalientes       Aguascalientes                0.789432                    9.55307                      12.8703            17848.3\n    2 │ 01      002     Aguascalientes       Asientos                      0.6615                      6.22975                      11.1364             6877.03\n    3 │ 01      003     Aguascalientes       Calvillo                      0.669557                    5.95726                      10.8926             8764.94\n  ⋮   │   ⋮       ⋮              ⋮                        ⋮                   ⋮                  ⋮                           ⋮                       ⋮\n 2455 │ 32      057     Zacatecas            Trancoso                      0.673578                    6.24331                      10.8909             7555.7\n 2456 │ 32      058     Zacatecas            Santa María de la Paz         0.668754                    5.86283                      12.143              8092.09\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.int_migratoria","page":"Home","title":"Reporstat.int_migratoria","text":"int_migratoria(cve_entidad::String, cve_municipio::String =\"\")::Float64\n\nDevuelve el índice de intensidad migratoria del municipio indicado. En caso de omitir el parámetro cve_municipio, devuelve los datos de la entidad indicada. Datos obtenidos de aquí.\n\nEjemplo\n\njulia> int_migratoria(clave(\"Campeche\"),\"003\")\n0.288\n\njulia> int_migratoria(clave(\"Campeche\"))\n0.64\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.int_migratoria_todos","page":"Home","title":"Reporstat.int_migratoria_todos","text":"int_migratoria_todos()::DataFrame\n\nRegresa un DataFrame con los índices de intensidad migratoria de todos los municipios. Datos obtenidos de aquí.\n\nEjemplo\n\njulia> int_migratoria_todos()\n2469×5 DataFrame\n  Row │ ent     ent_nombre      mun     mun_nom                       iaim     ⋯\n      │ String  String          String  String                        Float64? ⋯\n──────┼─────────────────────────────────────────────────────────────────────────\n    1 │ 01      Aguascalientes  001     Aguascalientes                   1.92  ⋯\n    2 │ 01      Aguascalientes  002     Asientos                         5.18\n  ⋮   │   ⋮           ⋮           ⋮                  ⋮                   ⋮     ⋱\n 2468 │ 32      Zacatecas       057     Trancoso                         4.141 ⋯\n 2469 │ 32      Zacatecas       058     Santa María de la Paz           10.074\n\n\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.edad_entidades","page":"Home","title":"Reporstat.edad_entidades","text":"edad_entidades()::DataFrame\n\nDa a conocer el primer y tercer cuartil, así como mediana(segundo cuartil) de las edades por entidad en formato DataFrame. Dichos datos de edades actualizados al año 2020 se obtuvieron de la página INEGI.\n\nEjemplo\n\njulia> edad_entidades()\n32×5 DataFrame\n  Row │ entidad  entidad_nombre       Q1             Q2            Q3\n      │ String   String                 Float64        Float64       Float64\n──────┼───────────────────────────────────────────────────────────────────────────\n    1 │ 01       Aguascalientes            13           26              43\n    2 │ 02       Baja California           15           28              44\n    3 │ 03       Baja California Sur       14           28              43\n   ⋮        ⋮             ⋮              ⋮             ⋮                ⋮\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.edad_municipios","page":"Home","title":"Reporstat.edad_municipios","text":"edad_municipios(cve_entidad::String,cve_municipio::String)::DataFrame\n\nDa a conocer el primer y tercer cuartil, así como mediana(segundo cuartil) de las edades del municipio indicado en formato DataFrame. Dichos datos de edades actualizados al año 2020 se obtuvieron de la página INEGI.\n\nEjemplo\n\njulia> edad_municipios(\"01\", \"001\")\n1×7 DataFrame\n  Row │ entidad  entidad_nombre  municipio  municipio_nombre    Q1             Q2            Q3\n      │ String   String          String     String            Float64        Float64       Float64\n──────┼──────────────────────────────────────────────────────────────────────────────────────────────────\n    1 │ 01       Aguascalientes  001        Aguascalientes        14           28              46\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.edad_municipios_todos","page":"Home","title":"Reporstat.edad_municipios_todos","text":"edad_municipios_todos()::DataFrame\n\nDa a conocer el primer y tercer cuartil, así como mediana(segundo cuartil) de las edades, a nivel nacional segregado por municipio en formato DataFrame. Dichos datos de edades actualizados al año 2020 se obtuvieron de la página INEGI.\n\nEjemplo\n\njulia> edad_municipios_todos()\n2469×7 DataFrame\n  Row │ entidad  entidad_nombre  municipio  municipio_nombre    Q1             Q2            Q3\n      │ String   String          String     String            Float64        Float64       Float64\n──────┼──────────────────────────────────────────────────────────────────────────────────────────────────\n    1 │ 01       Aguascalientes  001        Aguascalientes        14           28              46\n    2 │ 01       Aguascalientes  002        Asientos              11           24              42\n    3 │ 01       Aguascalientes  003        Calvillo              12           27              46\n   ⋮           ⋮             ⋮       ⋮             ⋮                   ⋮            ⋮               ⋮\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.tasas_vitales","page":"Home","title":"Reporstat.tasas_vitales","text":"tasas_vitales(cve_entidad::String, cve_municipio::String=\"\")::DataFrame\n\nProporciona un DataFrame con las tasas de natalidad, fecundidad y mortalidad del municipio indicado. En caso de omitir el parámetro cve_municipio, se mostrarán datos de la entidad indicada. Datos obtenidos del registro de nacimientos (2019), defunciones generales (2019) y población de mujeres en edad fértil (15-45 años, 2020) del INEGI.\n\nEjemplo\n\njulia> tasas_vitales(\"01\", \"001\")\n1×3 DataFrame\n Row │ Natalidad  Fecundidad  Mortalidad\n     │ Float64    Float64     Float64\n─────┼───────────────────────────────────\n   1 │ 0.0430915   0.0915221   0.0221098\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.geografia","page":"Home","title":"Reporstat.geografia","text":"geografia(cve_entidad::String,cve_municipio::String =\"\")::DataFrame\n\nDevuelve un DataFrame con la latitud, longitud y altitud promedio del municipio indicado. En caso de omitir el parámetro cve_municipio, devuelve los datos de la entidad indicada.  Datos obtenidos de aquí.\n\nSe pueden hacer consultas de una entidad o de un municipio.\n\njulia> geografia(clave(\"Oaxaca\"),\"003\")\n1×5 DataFrame\n Row │ ent  mun  latitud       longitud       altitud\n     │ Any  Any  Any           Any            Any\n─────┼────────────────────────────────────────────────\n   1 │ 20   003  17°04´10.549  095°58´04.929  1486\n\njulia> geografia(clave(\"Oaxaca\"),\"003\").latitud\n1-element Array{Any,1}:\n \"17°04´10.549\"\n\njulia> geografia(clave(\"Oaxaca\"),\"003\").altitud\n1-element Array{Any,1}:\n \"1486\"\n\njulia> geografia(clave(\"Campeche\"))\n1×4 DataFrame\n Row │ ent  latitud       longitud       altitud\n     │ Any  Any           Any            Any\n─────┼───────────────────────────────────────────\n   1 │ 04   19°01´17.138  092°27´54.859  14\n\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.geografia_todos_municipios","page":"Home","title":"Reporstat.geografia_todos_municipios","text":"geografia_todos_municipios()::DataFrame\nDevuelve los datos geográficos de todos los municipios(latitud, longitud y altitud promedio), puedes consultar la información [aquí](https://www.inegi.org.mx/app/ageeml/#).\n\nEjemplo\n\njulia> geografia_todos_municipios()\n2469×7 DataFrame\n  Row │ ent     nom_ent         mun     nom_mun                       latitud  ⋯\n      │ String  String          String  String                        String   ⋯\n──────┼─────────────────────────────────────────────────────────────────────────\n    1 │ 01      Aguascalientes  001     Aguascalientes                22°03´26 ⋯\n    2 │ 01      Aguascalientes  002     Asientos                      22°17´45\n  ⋮   │   ⋮           ⋮           ⋮                  ⋮                     ⋮   ⋱\n 2468 │ 32      Zacatecas       057     Trancoso                      22°49´06 ⋯\n 2469 │ 32      Zacatecas       058     Santa María de la Paz         21°33´55\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.codigos_postales","page":"Home","title":"Reporstat.codigos_postales","text":"codigos_postales()::DataFrame\n\nProporciona los códigos postales del municpio indicado, en un DataFrame. Los datos son obtenidos del Servicio Postal Mexicano.\n\nEjemplo\n\njulia> codigos_postales(\"01\", \"001\")\n1×6 DataFrame\n  Row │ entidad  entidad_nombre  municipio  municipio_nombre  número de códigos postales  códigos postales\n      │ String   String          String     String            Int64                       String\n──────┼────────────────────────────────────────────────────────────────────────────────────────────────────\n    1 │ 01       Aguascalientes  001        Aguascalientes                           599  20000;20010;20010 ⋯\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.codigos_postales_todos","page":"Home","title":"Reporstat.codigos_postales_todos","text":"codigos_postales_todos()::DataFrame\n\nProporciona todos los códigos postales de México, segregados por municipio, en un DataFrame. Los datos son obtenidos del Servicio Postal Mexicano.\n\nEjemplo\n\njulia> codigos_postales_todos()\n2465×6 DataFrame\n  Row │ entidad  entidad_nombre  municipio  municipio_nombre  número de códigos postales  códigos postales\n      │ String   String          String     String            Int64                       String\n──────┼────────────────────────────────────────────────────────────────────────────────────────────────────\n    1 │ 01       Aguascalientes  001        Aguascalientes                           599  20000;20010;20010 ⋯\n    2 │ 01       Aguascalientes  002        Asientos                                  82  20700;20700;20700 ⋯\n  ⋮   │    ⋮           ⋮             ⋮                   ⋮                ⋮                               ⋮\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.poblacion_mexico","page":"Home","title":"Reporstat.poblacion_mexico","text":"poblacion_mexico(token_INEGI::String=\"\")::DataFrame\n\nRegresa un DataFrame con los datos más recientes, a nivel nacional, proporcionados por la API de Indicadores del INEGI. Requiere el token (token_INEGI) de la API, puede obtenerse aquí. Se puede proporcionar el token directamente o por medio de una variable de entorno llamada de la misma manera, token_INEGI.\n\nEjemplo\n\njulia> ENV[\"token_INEGI\"] = \"00000000-0000-0000-0000-000000000000\"\n\"00000000-0000-0000-0000-000000000000\"\n\njulia> poblacion_mexico()\n1×9 DataFrame\n Row │ lugar   total      hombres   mujeres   porcentaje_hombres  porcentaje_mujeres  porcentaje_indigena  densidad_poblacion  extesion_territorial\n     │ String  Int64      Int64     Int64     Float64             Float64             Float64              Float64             Float64\n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ México  126014024  61473390  64540634              48.783              51.217              21.4965             64.2717             1.96065e6\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.poblacion_entidad","page":"Home","title":"Reporstat.poblacion_entidad","text":"poblacion_entidad(cve_entidad::String, token_INEGI::String=\"\")::poblacion\n\nRegresa un una DataFrame con los datos más recientes, por entidad federativa, proporcionados por la API de Indicadores del INEGI. Requiere el token (token_INEGI) de la API, puede obtenerse aquí. Se puede proporcionar el token directamente o por medio de una variable de entorno, de la siguiente manera.\n\njulia> ENV[\"token_INEGI\"] = \"00000000-0000-0000-0000-000000000000\"\n\nEl DataFrame resultante contiene los siguientes datos.\n\nlugar\npoblación total\ndensidad de población (habitantes por kilómetro cuadrado)\nextensión terrotorial (kilómetros cuadrados)\npoblación total hombres\npoblación total mujeres\nporcentaje de hombres\nporcentaje de mujeres\nporcentaje de población que se considera indígena\n\nnote: Note\nÁrea geoestadística estatal (AGEE)La entidad federativa se codifica de acuerdo con el orden alfabético de sus nombres oficiales, con una longitud de dos dígitos, a partir del 01 en adelante, según el número de entidades federativas que dispongan las leyes vigentes; en este momento son 32 entidades federativas (Aguascalientes 01, Baja California 02,... y Zacatecas 32). Las puedes consultar aquí.\n\nClave Entidad Entidad\n01 Aguascalientes\n02 Baja California\n03 Baja California Sur\n⋮ ⋮\n30 Veracruz de Ignacio de la Llave\n31 Yucatán\n32 Zacatecas\n\nEjemplo\n\njulia> popu = poblacion_entidad(\"31\", token)\n1×9 DataFrame\n Row │ lugar    total    hombres  mujeres  porcentaje_hombres  porcentaje_mujeres  porcentaje_indigena  densidad_poblacion  extesion_territorial\n     │ String   Int64    Int64    Int64    Float64             Float64             Float64              Float64             Float64\n─────┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ Yucatán  2320898  1140279  1180619             49.1309             50.8691              65.4035             58.7206               39524.4\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.poblacion_municipio","page":"Home","title":"Reporstat.poblacion_municipio","text":"poblacion_municipio(cve_entidad::String, cve_municipio::String, token_INEGI::String=\"\")::DataFrame\n\nRegresa un DataFrame con los datos más recientes, por municipio, proporcionados por la API de Indicadores del INEGI. Requiere el token (token_INEGI) de la API, puede obtenerse aquí. Se puede proporcionar el token directamente o por medio de una variable de entorno llamada de la misma manera, token_INEGI.\n\nnote: Note\nÁrea geoestadística municipal (AGEM)La clave del municipio está formada por tres números que se asignan de manera ascendente  a  partir  del  001,  de  acuerdo  con  el  orden  alfabético  de  los  nombres  de  los  municipios,  aunque  a  los  creados  posteriormente  a  la  clavificación  inicial,  se  les  asigna  la  clave  geoestadística  conforme se vayan creando. Las puedes consultar aquí.Clave Entidad Nombre Entidad Clave Municipio Nombre Municipio\n01 Aguascalientes 001 Aguascalientes\n01 Aguascalientes 002 Asientos\n01 Aguascalientes 003 Calvillo\n⋮ ⋮ ⋮ ⋮\n32 Zacatecas 056 Zacatecas\n32 Zacatecas 057 Trancoso\n32 Zacatecas 058 Santa María de la Paz\n\nEjemplo\n\njulia> ENV[\"token_INEGI\"] = \"00000000-0000-0000-0000-000000000000\"\n\"00000000-0000-0000-0000-000000000000\"\n\njulia> popu = poblacion_municipio(\"01\", \"002\")\n1×9 DataFrame\n Row │ lugar                     total  hombres  mujeres  porcentaje_hombres  porcentaje_mujeres  porcentaje_indigena  densidad_poblacion  extesion_territorial\n     │ String                    Int64  Int64    Int64    Float64             Float64             Float64              Float64             Float64\n─────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ Aguascalientes, Asientos  51536    25261    26275             49.0162             50.9838              3.63938             93.8709               549.009\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.poblacion_todas_entidades","page":"Home","title":"Reporstat.poblacion_todas_entidades","text":"poblacion_todas_entidades()::DataFrame\n\nRegresa un DataFrame con los datos poblacionales de todas las entidades.\n\nclave de entidad\nnombre oficial de la entidad\npoblación total\ndensidad de población (habitantes por kilómetro cuadrado)\nextensión territorial (kilómetros cuadrados)\npoblación total hombres\npoblación total mujeres\nporcentaje de hombres\nporcentaje de mujeres\nporcentaje de población que se considera indígena\n\nEjemplo\n\njulia> poblacion_todas_entidades()\n32×10 DataFrame\n Row │ entidad  entidad_nombre     total     densidad   extension_territorial  hombres    mujeres    ⋯\n     │ String   String             Int64     Float64    Float64                Int64      Int64      ⋯\n─────┼───────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 01       Aguascalientes      1425607   253.862            5615.67        69668300   72892400  ⋯\n   2 │ 02       Baja California     3769020    52.7505          71450.0        190058900  186843100        \n   ⋮ │ ⋮             ⋮                 ⋮            ⋮           ⋮                 ⋮                      ⋱\n  32 │ 32       Zacatecas           1622138    21.5494          75275.3         79105800   83108000  ⋯\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.poblacion_todos_municipios","page":"Home","title":"Reporstat.poblacion_todos_municipios","text":"poblacion_todos_municipios()::DataFrame\n\nRegresa un DataFrame con los datos poblacionales de todos los municipios.\n\nnombre del lugar\nclave de entidad\nnombre de la entidad\nclave de municipio\nnombre de municipio\npoblación total\ndensidad de población (habitantes por kilómetro cuadrado)\nextensión territorial (kilómetros cuadrados)\npoblación total hombres\npoblación total mujeres\nporcentaje de hombres\nporcentaje de mujeres\nporcentaje de población que se considera indígena\n\nEjemplo\n\njulia> poblacion_todos_municipios()\n2469×11 DataFrame\n  Row │ entidad  entidad_nombre  municipio  municipio_nombre              total   densidad   hombres   mujeres   porcentaje_hombres  porcentajes_mujeres ⋯\n      │ String   String          String     String                        Int64   Float64    Int64     Int64     Float64             Float64             ⋯\n──────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n    1 │ 01       Aguascalientes  001        Aguascalientes                797010   744.58     386429   410581.0             48.5335              51.4665 ⋯\n    2 │ 01       Aguascalientes  002        Asientos                      797010   744.58     386429   410581.0             48.5335              51.4665\n    ⋮   │    ⋮           ⋮             ⋮                   ⋮                   ⋮           ⋮         ⋮         ⋮              ⋮                    ⋮          ⋱\n 2468 │ 32       Zacatecas       057        Trancoso                      138176   331.026     66297    71879.0             48.482               51.518  ⋯\n 2469 │ 32       Zacatecas       058        Santa María de la Paz          16934    87.9192     8358     8576.0             48.962               51.038\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.similitud_region","page":"Home","title":"Reporstat.similitud_region","text":"similitud_region(region::String)::Array{Array{String}}\n\nProporciona dos arreglos dentro de un arreglo. El primer arreglo contiene todas las entidades similares a region y el segundo todos los municipios similares a region.\n\nEjemplo\n\njulia> similitud_region(\"jalisto\")\n2-element Array{Array{String,N} where N,1}:\n [\"Jalisco\"]\n [\"Xalisco\", \"Naolinco\", \"Xaloztoc\", \"Calvillo\", \"Saltillo\"]\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.similitud_entidad","page":"Home","title":"Reporstat.similitud_entidad","text":"similitud_entidad(entidad::String)::Array{String}\n\nProporciona un arreglo con todas las entidades con un nombre igual o similar a entidad.\n\nEjemplo\n\njulia> similitud_entidad(\"oajaca\")\n1-element Array{String,1}:\n \"Oaxaca\"\n\njulia> clave(similitud_entidad(\"oaxjaca\")[1])\n\"29\"\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.similitud_municipio","page":"Home","title":"Reporstat.similitud_municipio","text":"similitud_municipio(municipio::String)::Array{String}\n\nProporciona un arreglo con todos los municipios con un nombre igual o similar a municipio.\n\nEjemplo\n\njulia> similitud_municipio(\"tequixciapn\")\n3-element Array{String,1}:\n \"Tequisquiapan\"\n \"Atlequizayan\"\n \"Tequixquiac\"\n\njulia> clave(similitud_municipio(\"tequixciapn\")[end])\n\"096\"\n\n\n\n\n\n","category":"function"},{"location":"#Indicadores-de-Pobreza","page":"Home","title":"Indicadores de Pobreza","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Datos proporcionados por el Consejo Nacional de Evaluación de la Política de Desarrollo Social, actualizados al año 2015.","category":"page"},{"location":"#Diccionario-de-Datos,-Indicadores-de-pobreza-municipal-(2015)","page":"Home","title":"Diccionario de Datos, Indicadores de pobreza municipal (2015)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Abreviación Significado\npobreza Población en situación de pobreza\npobreza_e Población en situación de pobreza extrema\npobreza_m Población en situación de pobreza moderada\nvul_car Población vulnerable por carencias\nvul_ing Población vulnerable por ingreso\nnpnv Población no pobre y no vulnerable\nic_rezedu Población con rezago educativo\nic_asalud Población con carencia por acceso a los servicios de salud\nic_segsoc Población con carencia por acceso a la seguridad social\nic_cv Población con carencia por calidad y espacios en la vivienda\nic_sbv Población con carencia por acceso a los servicios básicos en la vivienda\nic_ali Población con carencia por acceso a la alimentación\ncarencias Población con al menos una carencia social\ncarencias3 Población con al menos tres carencias sociales\nplb Población con ingreso inferior a la línea de bienestar\nplbm Población con ingreso inferior a la línea de bienestar mínimo","category":"page"},{"location":"","page":"Home","title":"Home","text":"indicadores_pobreza\nindicadores_pobreza_porcentaje\nindicadores_pobreza_todos\nindicadores_pobreza_porcentaje_todos","category":"page"},{"location":"#Reporstat.indicadores_pobreza","page":"Home","title":"Reporstat.indicadores_pobreza","text":"indicadores_pobreza(cve_entidad::String,cve_municipio::String)::DataFrame\n\nProporciona el número de personas que cumple con los indicadores de pobreza según el CONEVAL, del municipio indicado.\n\nLos datos son obtenidos de la página oficial de datos abiertos del gobierno federal de México datos.gob.mx Consulta el Diccionario de Datos, Indicadores de pobreza municipal (2015)\n\nEjemplo\n\njulia> df = indicadores_pobreza(\"01\", \"001\")\n1×20 DataFrame\n  Row │ entidad  entidad_nombre       municipio  municipio_nombre pobreza  pobreza_e  pobreza_m ⋯\n      │ String   String               String     String           Int64    Int64      Int64     ⋯\n──────┼────────────────────────────────────────────────────────────────────────────────────────\n    1 │ 01       Aguascalientes       001        Aguascalientes   224949      13650     211299 ⋯\n\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.indicadores_pobreza_porcentaje","page":"Home","title":"Reporstat.indicadores_pobreza_porcentaje","text":"indicadores_pobreza_porcentaje(cve_entidad::String,cve_municipio::String)::DataFrame\n\nProporciona el porcentaje de personas que cumple con los indicadores de pobreza según el CONEVAL, del municipio indicado.\n\nLos datos son obtenidos de la página oficial de datos abiertos del gobierno federal de México datos.gob.mx Consulta el Diccionario de Datos, Indicadores de pobreza municipal (2015)\n\njulia> df = indicadores_pobreza_porcentaje(\"01\", \"001\")\n1×20 DataFrame\n  Row │ entidad  entidad_nombre       municipio  municipio_nombre pobreza  pobreza_e  pobreza_m ⋯\n      │ String   String               String     String           Float64  Float64    Float64   ⋯\n──────┼─────────────────────────────────────────────────────────────────────────────────────────\n    1 │ 01       Aguascalientes       001        Aguascalientes      26.1        1.6       24.5 ⋯\n\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.indicadores_pobreza_todos","page":"Home","title":"Reporstat.indicadores_pobreza_todos","text":"indicadores_pobreza_todos()::DataFrame\n\nProporciona el número de personas que cumple con los indicadores de pobreza según el CONEVAL, a nivel nacional segregado por municipios.\n\nLos datos son obtenidos de la página oficial de datos abiertos del gobierno federal de México datos.gob.mx Consulta el Diccionario de Datos, Indicadores de pobreza municipal (2015)\n\njulia> df = indicadores_pobreza_todos()\n2457×20 DataFrame\n  Row │ entidad  entidad_nombre       municipio  municipio_nombre pobreza  pobreza_e  pobreza_m ⋯\n      │ String   String               String     String           Int64    Int64      Int64     ⋯\n──────┼────────────────────────────────────────────────────────────────────────────────────────\n    1 │ 01       Aguascalientes       001        Aguascalientes   224949      13650     211299 ⋯\n    2 │ 01       Aguascalientes       002        Asientos          25169       2067      23101 ⋯\n   ⋮  │ ⋮             ⋮               ⋮               ⋮            ⋮            ⋮          ⋮\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.indicadores_pobreza_porcentaje_todos","page":"Home","title":"Reporstat.indicadores_pobreza_porcentaje_todos","text":"indicadores_pobreza_porcentaje_todos()::DataFrame\n\nProporciona el porcentaje de personas que cumple con los indicadores de pobreza según el CONEVAL, a nivel nacional segregado por municipios.\n\nLos datos son obtenidos de la página oficial de datos abiertos del gobierno federal de México datos.gob.mx Consulta el Diccionario de Datos, Indicadores de pobreza municipal (2015)\n\njulia> df = indicadores_pobreza_porcentaje_todos()\n2457×20 DataFrame\n  Row │ entidad  entidad_nombre       municipio  municipio_nombre pobreza  pobreza_e  pobreza_m ⋯\n      │ String   String               String     String           Float64  Float64    Float64   ⋯\n──────┼─────────────────────────────────────────────────────────────────────────────────────────\n    1 │ 01       Aguascalientes       001        Aguascalientes      26.1        1.6       24.5 ⋯\n    2 │ 01       Aguascalientes       002        Asientos            54.0        4.4       49.5 ⋯\n   ⋮  │ ⋮             ⋮               ⋮               ⋮            ⋮            ⋮          ⋮\n\n\n\n\n\n","category":"function"},{"location":"#Utilidades","page":"Home","title":"Utilidades","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Utilidades varias que tienen como objetivo facilitar la manipulación de archivos CSV, DataFrames, entre otras.","category":"page"},{"location":"","page":"Home","title":"Home","text":"clave\n\ncargar_csv\ncsv_a_DataFrame\n\nunzip\njsonparse\n\nfechahoy\n\nfiltrar\nseleccionar\n\ncontar_renglones\nsumar_columna\nsumar_fila","category":"page"},{"location":"#Reporstat.clave","page":"Home","title":"Reporstat.clave","text":"clave(id::String)::String\n\nToma como parámetro el nombre de algún municipio o entidad y regresa la clave del mismo.\n\nEjemplo\n\njulia> clave(\"Campeche\")\n\"04\"\njulia> clave(\"Calakmul\")\n\"010\"\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.cargar_csv","page":"Home","title":"Reporstat.cargar_csv","text":"cargar_csv(path_url::String, type::String=\"PATH\", encoding::String=\"UTF-8\")::DataFrame\n\nCrea un DataFrame dado un archivo CSV o una liga al archivo. Se pude especificar el encoding.\n\nEjemplo\n\njulia> url = \"http://www.conapo.gob.mx/work/models/OMI/Datos_Abiertos/DA_IAIM/IAIM_Municipio_2010.csv\"\njulia> first(cargar_csv(url, \"URL\", \"LATIN1\"))\njulia> first(cargar_csv(\"prueba.csv\"))\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.csv_a_DataFrame","page":"Home","title":"Reporstat.csv_a_DataFrame","text":"csv_a_DataFrame(path_url::String, encoding::String=\"UTF-8\")::DataFrame\n\nLee un archivo CSV con el encoding indicado y regresa un DataFrame.\n\nEjemplo\n\njulia> df = DataFrameEncode(\"datos.csv\")\njulia> df_latin1 = DataFrameEncode(\"datos.csv\", \"LATIN1\")\n\nLos encodings soportados dependen de la plataforma, obtén la lista de la siguiente manera.\n\njulia> using StringEncodings\njulia> encodings()\n\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.unzip","page":"Home","title":"Reporstat.unzip","text":"unzip(path::String, dest::String=\"\")\n\nDescomprime y guarda el archivo en el destino indicado(dest), si no se proporciona un destino, se guarda en el directorio actual.\n\nEjemplo\n\njulia> unzip(\"datos.zip\")\njulia> unzip(\"datos.zip\", pwd()*\"/datos\")\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.jsonparse","page":"Home","title":"Reporstat.jsonparse","text":"jsonparse(url::String)::Dict\n\nDel url indicado,convierte el json obtenido del sitio web en un diccionario. En caso de que el servidor devuelva un status distinto a 200, se arroja un error.\n\nEjemplo\n\njulia> datos = jsonparse(\"https://sitioweb.com/datos.json\")\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.fechahoy","page":"Home","title":"Reporstat.fechahoy","text":"fechahoy()::String\n\nCrea un string con la fecha de hoy utilizando el formato \"yyyymmdd\". Año con cuarto dígitos, mes y día con dos.\n\nEjemplo\n\njulia> fechahoy()\n\"20210112\"\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.filtrar","page":"Home","title":"Reporstat.filtrar","text":"filtrar(tabla::DataFrame, condiciones...)::DataFrame\n\nFiltra un DataFrame de acuerdo a las condiciones indicadas en los parametros (los parámetros actúan como expresiones). Los nombres de las columnas deben siempre tener el prefijo : , y puede ser especificada por nombre o por numero de columna.\n\nEjemplo\n\njulia> dt= DataFrame(A = [1,2,2,3],B = [\"A\",\"A\",\"B\",\"BB\"])\n4×2 DataFrame\n Row │ A      B\n     │ Int32  String\n─────┼───────────────\n   1 │     1  A\n   2 │     2  A\n   3 │     2  B\n   4 │     3  BB\n\njulia> filtrar(dt, \":1 == 2\")\n2×2 DataFrame\n Row │ A    B\n     │ Any  Any\n─────┼──────────\n   1 │ 2    A\n   2 │ 2    B\n\nEn caso de que se trate de una string se deben siempre encerrar entre comillas simples.\n\njulia> filtrar(dt, \"'A' == :2\")\n2×2 DataFrame\n Row │ A    B\n     │ Any  Any\n─────┼──────────\n   1 │ 1    A\n   2 │ 2    A\n\nLas condiciones se deben poner en parámetros diferentes.\n\njulia> filtrar(dt, \"2 == :A\" , \"'A'== :B\")\n1×2 DataFrame\n Row │ A    B\n     │ Any  Any\n─────┼──────────\n   1 │ 2    A\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.seleccionar","page":"Home","title":"Reporstat.seleccionar","text":"seleccionar(Tabla::DataFrame, query::Vector{String})::DataFrame\n\nSelecciona una o varias columnas del DataFrame puede ser por nombre o por número de columna y regresa un nuevo DataFrame con las columnas seleccionadas.\n\nEjemplo\n\n\njulia> tabla = DataFrame(A = 1:3, B= 1:3)\n3×2 DataFrame\n Row │ A      B\n     │ Int32  Int32\n─────┼──────────────\n   1 │     1      1\n   2 │     2      2\n   3 │     3      3\n\njulia> q1 = seleccionar(tabla,[\"1\"])\n3×1 DataFrame\n Row │ A\n     │ Int32\n─────┼───────\n   1 │     1\n   2 │     2\n   3 │     3\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.contar_renglones","page":"Home","title":"Reporstat.contar_renglones","text":"contar_renglones(tabla::DataFrame, condiciones...)::Number\n\nLlama internamente a la función Reporstat.filtrar con los mismos argumentos y regresa el número de renglones que tiene el DataFrame que retorna  Reporstat.filtrar\n\nEjemplo\n\njulia> dt\n4×2 DataFrame\n Row │ A      B\n     │ Int32  String\n─────┼───────────────\n   1 │     1  A\n   2 │     2  A\n   3 │     2  B\n   4 │     3  BB\n\njulia> filtrar(dt, \"2 == :A\" , \"'A'== :B\")\n1×2 DataFrame\n Row │ A    B\n     │ Any  Any\n─────┼──────────\n   1 │ 2    A\n\njulia> contar_renglones(dt, \"2 == :A\" , \"'A'== :B\")\n1\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.sumar_columna","page":"Home","title":"Reporstat.sumar_columna","text":"sumar_columna(tabla::DataFrame, col::Int)::Number\nsumar_columna(tabla::DataFrame, col::String)::Number\n\nSuma todos los valores de una determinada columna en un DataFrame. Para hacer referencia a que columna se desea sumar se pude usar la posición de la columna o el nombre que tiene.\n\nEjemplo\n\njulia> df = cargar_csv(\"datos.csv\")\n4×2 DataFrame\n Row │ x      y\n     │ Int64  Int64\n─────┼──────────────\n   1 │     0     11\n   2 │     2     12\n   3 │     0     13\n   4 │    40     14\n\njulia> sumar_columna(df, 1)\n42\n\njulia> sumar_columna(df, \"x\")\n42\n\n\n\n\n\n","category":"function"},{"location":"#Reporstat.sumar_fila","page":"Home","title":"Reporstat.sumar_fila","text":"sumar_fila(tabla::DataFrame, fila::Int)::Number\n\nSuma todos los valores de una determinada fila en un DataFrame. La fila se especifica con la posición en la que se encuentra.\n\nEjemplo\n\njulia> df = cargar_csv(\"datos.csv\")\n4×2 DataFrame\n Row │ x      y\n     │ Int64  Int64\n─────┼──────────────\n   1 │     0     11\n   2 │     2     12\n   3 │     0     13\n   4 │    40     14\n\njulia> sumar_fila(df, 2)\n14\n\njulia> sumar_fila(df, 4)\n54\n\n\n\n\n\n","category":"function"}]
}
